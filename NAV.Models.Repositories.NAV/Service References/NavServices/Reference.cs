//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.488
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace NAV.Models.Repositories.NAV.NavServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", ConfigurationName="NavServices.SilverlightWeb_Port")]
    public interface SilverlightWeb_Port {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb:GetConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginGetConfiguration(NAV.NavServices.GetConfiguration request, System.AsyncCallback callback, object asyncState);
        
        NAV.NavServices.GetConfiguration_Result EndGetConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb:ValidateLoginCredentials", ReplyAction="*")]
        System.IAsyncResult BeginValidateLoginCredentials(NAV.NavServices.ValidateLoginCredentials request, System.AsyncCallback callback, object asyncState);
        
        NAV.NavServices.ValidateLoginCredentials_Result EndValidateLoginCredentials(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb:GetCustomerList", ReplyAction="*")]
        System.IAsyncResult BeginGetCustomerList(NAV.NavServices.GetCustomerList request, System.AsyncCallback callback, object asyncState);
        
        NAV.NavServices.GetCustomerList_Result EndGetCustomerList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb:SaveCustomer", ReplyAction="*")]
        System.IAsyncResult BeginSaveCustomer(NAV.NavServices.SaveCustomer request, System.AsyncCallback callback, object asyncState);
        
        NAV.NavServices.SaveCustomer_Result EndSaveCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb:GetReport", ReplyAction="*")]
        System.IAsyncResult BeginGetReport(NAV.NavServices.GetReport request, System.AsyncCallback callback, object asyncState);
        
        NAV.NavServices.GetReport_Result EndGetReport(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConfiguration", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", IsWrapped=true)]
    public partial class GetConfiguration {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=0)]
        public string xmlData;
        
        public GetConfiguration() {
        }
        
        public GetConfiguration(string xmlData) {
            this.xmlData = xmlData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConfiguration_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", IsWrapped=true)]
    public partial class GetConfiguration_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=1)]
        public string xmlData;
        
        public GetConfiguration_Result() {
        }
        
        public GetConfiguration_Result(bool return_value, string xmlData) {
            this.return_value = return_value;
            this.xmlData = xmlData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateLoginCredentials", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", IsWrapped=true)]
    public partial class ValidateLoginCredentials {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=0)]
        public string domain;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=1)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=2)]
        public string securePassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=3)]
        public string authToken;
        
        public ValidateLoginCredentials() {
        }
        
        public ValidateLoginCredentials(string domain, string userName, string securePassword, string authToken) {
            this.domain = domain;
            this.userName = userName;
            this.securePassword = securePassword;
            this.authToken = authToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateLoginCredentials_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", IsWrapped=true)]
    public partial class ValidateLoginCredentials_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=1)]
        public string authToken;
        
        public ValidateLoginCredentials_Result() {
        }
        
        public ValidateLoginCredentials_Result(bool return_value, string authToken) {
            this.return_value = return_value;
            this.authToken = authToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerList", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", IsWrapped=true)]
    public partial class GetCustomerList {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=0)]
        public string authToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=1)]
        public string xmlData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=2)]
        public string xmlFilters;
        
        public GetCustomerList() {
        }
        
        public GetCustomerList(string authToken, string xmlData, string xmlFilters) {
            this.authToken = authToken;
            this.xmlData = xmlData;
            this.xmlFilters = xmlFilters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerList_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", IsWrapped=true)]
    public partial class GetCustomerList_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=1)]
        public string authToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=2)]
        public string xmlData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=3)]
        public string xmlFilters;
        
        public GetCustomerList_Result() {
        }
        
        public GetCustomerList_Result(bool return_value, string authToken, string xmlData, string xmlFilters) {
            this.return_value = return_value;
            this.authToken = authToken;
            this.xmlData = xmlData;
            this.xmlFilters = xmlFilters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveCustomer", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", IsWrapped=true)]
    public partial class SaveCustomer {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=0)]
        public string authToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=1)]
        public string xmlData;
        
        public SaveCustomer() {
        }
        
        public SaveCustomer(string authToken, string xmlData) {
            this.authToken = authToken;
            this.xmlData = xmlData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveCustomer_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", IsWrapped=true)]
    public partial class SaveCustomer_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=1)]
        public string authToken;
        
        public SaveCustomer_Result() {
        }
        
        public SaveCustomer_Result(bool return_value, string authToken) {
            this.return_value = return_value;
            this.authToken = authToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReport", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", IsWrapped=true)]
    public partial class GetReport {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=0)]
        public string authToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=1)]
        public int reportID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=2)]
        public string reportURL;
        
        public GetReport() {
        }
        
        public GetReport(string authToken, int reportID, string reportURL) {
            this.authToken = authToken;
            this.reportID = reportID;
            this.reportURL = reportURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReport_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", IsWrapped=true)]
    public partial class GetReport_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=1)]
        public string authToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/SilverlightWeb", Order=2)]
        public string reportURL;
        
        public GetReport_Result() {
        }
        
        public GetReport_Result(bool return_value, string authToken, string reportURL) {
            this.return_value = return_value;
            this.authToken = authToken;
            this.reportURL = reportURL;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SilverlightWeb_PortChannel : NAV.NavServices.SilverlightWeb_Port, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string xmlData {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateLoginCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateLoginCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string authToken {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string authToken {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string xmlData {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public string xmlFilters {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string authToken {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string authToken {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string reportURL {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SilverlightWeb_PortClient : System.ServiceModel.ClientBase<NAV.NavServices.SilverlightWeb_Port>, NAV.NavServices.SilverlightWeb_Port {
        
        private BeginOperationDelegate onBeginGetConfigurationDelegate;
        
        private EndOperationDelegate onEndGetConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onGetConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateLoginCredentialsDelegate;
        
        private EndOperationDelegate onEndValidateLoginCredentialsDelegate;
        
        private System.Threading.SendOrPostCallback onValidateLoginCredentialsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerListDelegate;
        
        private EndOperationDelegate onEndGetCustomerListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerListCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCustomerDelegate;
        
        private EndOperationDelegate onEndSaveCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportDelegate;
        
        private EndOperationDelegate onEndGetReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SilverlightWeb_PortClient() {
        }
        
        public SilverlightWeb_PortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SilverlightWeb_PortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SilverlightWeb_PortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SilverlightWeb_PortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetConfigurationCompletedEventArgs> GetConfigurationCompleted;
        
        public event System.EventHandler<ValidateLoginCredentialsCompletedEventArgs> ValidateLoginCredentialsCompleted;
        
        public event System.EventHandler<GetCustomerListCompletedEventArgs> GetCustomerListCompleted;
        
        public event System.EventHandler<SaveCustomerCompletedEventArgs> SaveCustomerCompleted;
        
        public event System.EventHandler<GetReportCompletedEventArgs> GetReportCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NAV.NavServices.SilverlightWeb_Port.BeginGetConfiguration(NAV.NavServices.GetConfiguration request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConfiguration(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetConfiguration(string xmlData, System.AsyncCallback callback, object asyncState) {
            NAV.NavServices.GetConfiguration inValue = new NAV.NavServices.GetConfiguration();
            inValue.xmlData = xmlData;
            return ((NAV.NavServices.SilverlightWeb_Port)(this)).BeginGetConfiguration(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NAV.NavServices.GetConfiguration_Result NAV.NavServices.SilverlightWeb_Port.EndGetConfiguration(System.IAsyncResult result) {
            return base.Channel.EndGetConfiguration(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndGetConfiguration(System.IAsyncResult result, out string xmlData) {
            NAV.NavServices.GetConfiguration_Result retVal = ((NAV.NavServices.SilverlightWeb_Port)(this)).EndGetConfiguration(result);
            xmlData = retVal.xmlData;
            return retVal.return_value;
        }
        
        private System.IAsyncResult OnBeginGetConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xmlData = ((string)(inValues[0]));
            return this.BeginGetConfiguration(xmlData, callback, asyncState);
        }
        
        private object[] OnEndGetConfiguration(System.IAsyncResult result) {
            string xmlData = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndGetConfiguration(result, out xmlData);
            return new object[] {
                    xmlData,
                    retVal};
        }
        
        private void OnGetConfigurationCompleted(object state) {
            if ((this.GetConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConfigurationCompleted(this, new GetConfigurationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConfigurationAsync(string xmlData) {
            this.GetConfigurationAsync(xmlData, null);
        }
        
        public void GetConfigurationAsync(string xmlData, object userState) {
            if ((this.onBeginGetConfigurationDelegate == null)) {
                this.onBeginGetConfigurationDelegate = new BeginOperationDelegate(this.OnBeginGetConfiguration);
            }
            if ((this.onEndGetConfigurationDelegate == null)) {
                this.onEndGetConfigurationDelegate = new EndOperationDelegate(this.OnEndGetConfiguration);
            }
            if ((this.onGetConfigurationCompletedDelegate == null)) {
                this.onGetConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginGetConfigurationDelegate, new object[] {
                        xmlData}, this.onEndGetConfigurationDelegate, this.onGetConfigurationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NAV.NavServices.SilverlightWeb_Port.BeginValidateLoginCredentials(NAV.NavServices.ValidateLoginCredentials request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateLoginCredentials(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginValidateLoginCredentials(string domain, string userName, string securePassword, string authToken, System.AsyncCallback callback, object asyncState) {
            NAV.NavServices.ValidateLoginCredentials inValue = new NAV.NavServices.ValidateLoginCredentials();
            inValue.domain = domain;
            inValue.userName = userName;
            inValue.securePassword = securePassword;
            inValue.authToken = authToken;
            return ((NAV.NavServices.SilverlightWeb_Port)(this)).BeginValidateLoginCredentials(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NAV.NavServices.ValidateLoginCredentials_Result NAV.NavServices.SilverlightWeb_Port.EndValidateLoginCredentials(System.IAsyncResult result) {
            return base.Channel.EndValidateLoginCredentials(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndValidateLoginCredentials(System.IAsyncResult result, out string authToken) {
            NAV.NavServices.ValidateLoginCredentials_Result retVal = ((NAV.NavServices.SilverlightWeb_Port)(this)).EndValidateLoginCredentials(result);
            authToken = retVal.authToken;
            return retVal.return_value;
        }
        
        private System.IAsyncResult OnBeginValidateLoginCredentials(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string domain = ((string)(inValues[0]));
            string userName = ((string)(inValues[1]));
            string securePassword = ((string)(inValues[2]));
            string authToken = ((string)(inValues[3]));
            return this.BeginValidateLoginCredentials(domain, userName, securePassword, authToken, callback, asyncState);
        }
        
        private object[] OnEndValidateLoginCredentials(System.IAsyncResult result) {
            string authToken = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndValidateLoginCredentials(result, out authToken);
            return new object[] {
                    authToken,
                    retVal};
        }
        
        private void OnValidateLoginCredentialsCompleted(object state) {
            if ((this.ValidateLoginCredentialsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateLoginCredentialsCompleted(this, new ValidateLoginCredentialsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateLoginCredentialsAsync(string domain, string userName, string securePassword, string authToken) {
            this.ValidateLoginCredentialsAsync(domain, userName, securePassword, authToken, null);
        }
        
        public void ValidateLoginCredentialsAsync(string domain, string userName, string securePassword, string authToken, object userState) {
            if ((this.onBeginValidateLoginCredentialsDelegate == null)) {
                this.onBeginValidateLoginCredentialsDelegate = new BeginOperationDelegate(this.OnBeginValidateLoginCredentials);
            }
            if ((this.onEndValidateLoginCredentialsDelegate == null)) {
                this.onEndValidateLoginCredentialsDelegate = new EndOperationDelegate(this.OnEndValidateLoginCredentials);
            }
            if ((this.onValidateLoginCredentialsCompletedDelegate == null)) {
                this.onValidateLoginCredentialsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateLoginCredentialsCompleted);
            }
            base.InvokeAsync(this.onBeginValidateLoginCredentialsDelegate, new object[] {
                        domain,
                        userName,
                        securePassword,
                        authToken}, this.onEndValidateLoginCredentialsDelegate, this.onValidateLoginCredentialsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NAV.NavServices.SilverlightWeb_Port.BeginGetCustomerList(NAV.NavServices.GetCustomerList request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetCustomerList(string authToken, string xmlData, string xmlFilters, System.AsyncCallback callback, object asyncState) {
            NAV.NavServices.GetCustomerList inValue = new NAV.NavServices.GetCustomerList();
            inValue.authToken = authToken;
            inValue.xmlData = xmlData;
            inValue.xmlFilters = xmlFilters;
            return ((NAV.NavServices.SilverlightWeb_Port)(this)).BeginGetCustomerList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NAV.NavServices.GetCustomerList_Result NAV.NavServices.SilverlightWeb_Port.EndGetCustomerList(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndGetCustomerList(System.IAsyncResult result, out string authToken, out string xmlData, out string xmlFilters) {
            NAV.NavServices.GetCustomerList_Result retVal = ((NAV.NavServices.SilverlightWeb_Port)(this)).EndGetCustomerList(result);
            authToken = retVal.authToken;
            xmlData = retVal.xmlData;
            xmlFilters = retVal.xmlFilters;
            return retVal.return_value;
        }
        
        private System.IAsyncResult OnBeginGetCustomerList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string xmlData = ((string)(inValues[1]));
            string xmlFilters = ((string)(inValues[2]));
            return this.BeginGetCustomerList(authToken, xmlData, xmlFilters, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerList(System.IAsyncResult result) {
            string authToken = this.GetDefaultValueForInitialization<string>();
            string xmlData = this.GetDefaultValueForInitialization<string>();
            string xmlFilters = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndGetCustomerList(result, out authToken, out xmlData, out xmlFilters);
            return new object[] {
                    authToken,
                    xmlData,
                    xmlFilters,
                    retVal};
        }
        
        private void OnGetCustomerListCompleted(object state) {
            if ((this.GetCustomerListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerListCompleted(this, new GetCustomerListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerListAsync(string authToken, string xmlData, string xmlFilters) {
            this.GetCustomerListAsync(authToken, xmlData, xmlFilters, null);
        }
        
        public void GetCustomerListAsync(string authToken, string xmlData, string xmlFilters, object userState) {
            if ((this.onBeginGetCustomerListDelegate == null)) {
                this.onBeginGetCustomerListDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerList);
            }
            if ((this.onEndGetCustomerListDelegate == null)) {
                this.onEndGetCustomerListDelegate = new EndOperationDelegate(this.OnEndGetCustomerList);
            }
            if ((this.onGetCustomerListCompletedDelegate == null)) {
                this.onGetCustomerListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerListDelegate, new object[] {
                        authToken,
                        xmlData,
                        xmlFilters}, this.onEndGetCustomerListDelegate, this.onGetCustomerListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NAV.NavServices.SilverlightWeb_Port.BeginSaveCustomer(NAV.NavServices.SaveCustomer request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCustomer(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSaveCustomer(string authToken, string xmlData, System.AsyncCallback callback, object asyncState) {
            NAV.NavServices.SaveCustomer inValue = new NAV.NavServices.SaveCustomer();
            inValue.authToken = authToken;
            inValue.xmlData = xmlData;
            return ((NAV.NavServices.SilverlightWeb_Port)(this)).BeginSaveCustomer(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NAV.NavServices.SaveCustomer_Result NAV.NavServices.SilverlightWeb_Port.EndSaveCustomer(System.IAsyncResult result) {
            return base.Channel.EndSaveCustomer(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndSaveCustomer(System.IAsyncResult result, out string authToken) {
            NAV.NavServices.SaveCustomer_Result retVal = ((NAV.NavServices.SilverlightWeb_Port)(this)).EndSaveCustomer(result);
            authToken = retVal.authToken;
            return retVal.return_value;
        }
        
        private System.IAsyncResult OnBeginSaveCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string xmlData = ((string)(inValues[1]));
            return this.BeginSaveCustomer(authToken, xmlData, callback, asyncState);
        }
        
        private object[] OnEndSaveCustomer(System.IAsyncResult result) {
            string authToken = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndSaveCustomer(result, out authToken);
            return new object[] {
                    authToken,
                    retVal};
        }
        
        private void OnSaveCustomerCompleted(object state) {
            if ((this.SaveCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCustomerCompleted(this, new SaveCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCustomerAsync(string authToken, string xmlData) {
            this.SaveCustomerAsync(authToken, xmlData, null);
        }
        
        public void SaveCustomerAsync(string authToken, string xmlData, object userState) {
            if ((this.onBeginSaveCustomerDelegate == null)) {
                this.onBeginSaveCustomerDelegate = new BeginOperationDelegate(this.OnBeginSaveCustomer);
            }
            if ((this.onEndSaveCustomerDelegate == null)) {
                this.onEndSaveCustomerDelegate = new EndOperationDelegate(this.OnEndSaveCustomer);
            }
            if ((this.onSaveCustomerCompletedDelegate == null)) {
                this.onSaveCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCustomerDelegate, new object[] {
                        authToken,
                        xmlData}, this.onEndSaveCustomerDelegate, this.onSaveCustomerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NAV.NavServices.SilverlightWeb_Port.BeginGetReport(NAV.NavServices.GetReport request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReport(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetReport(string authToken, int reportID, string reportURL, System.AsyncCallback callback, object asyncState) {
            NAV.NavServices.GetReport inValue = new NAV.NavServices.GetReport();
            inValue.authToken = authToken;
            inValue.reportID = reportID;
            inValue.reportURL = reportURL;
            return ((NAV.NavServices.SilverlightWeb_Port)(this)).BeginGetReport(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NAV.NavServices.GetReport_Result NAV.NavServices.SilverlightWeb_Port.EndGetReport(System.IAsyncResult result) {
            return base.Channel.EndGetReport(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndGetReport(System.IAsyncResult result, out string authToken, out string reportURL) {
            NAV.NavServices.GetReport_Result retVal = ((NAV.NavServices.SilverlightWeb_Port)(this)).EndGetReport(result);
            authToken = retVal.authToken;
            reportURL = retVal.reportURL;
            return retVal.return_value;
        }
        
        private System.IAsyncResult OnBeginGetReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            int reportID = ((int)(inValues[1]));
            string reportURL = ((string)(inValues[2]));
            return this.BeginGetReport(authToken, reportID, reportURL, callback, asyncState);
        }
        
        private object[] OnEndGetReport(System.IAsyncResult result) {
            string authToken = this.GetDefaultValueForInitialization<string>();
            string reportURL = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndGetReport(result, out authToken, out reportURL);
            return new object[] {
                    authToken,
                    reportURL,
                    retVal};
        }
        
        private void OnGetReportCompleted(object state) {
            if ((this.GetReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportCompleted(this, new GetReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportAsync(string authToken, int reportID, string reportURL) {
            this.GetReportAsync(authToken, reportID, reportURL, null);
        }
        
        public void GetReportAsync(string authToken, int reportID, string reportURL, object userState) {
            if ((this.onBeginGetReportDelegate == null)) {
                this.onBeginGetReportDelegate = new BeginOperationDelegate(this.OnBeginGetReport);
            }
            if ((this.onEndGetReportDelegate == null)) {
                this.onEndGetReportDelegate = new EndOperationDelegate(this.OnEndGetReport);
            }
            if ((this.onGetReportCompletedDelegate == null)) {
                this.onGetReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportDelegate, new object[] {
                        authToken,
                        reportID,
                        reportURL}, this.onEndGetReportDelegate, this.onGetReportCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override NAV.NavServices.SilverlightWeb_Port CreateChannel() {
            return new SilverlightWeb_PortClientChannel(this);
        }
        
        private class SilverlightWeb_PortClientChannel : ChannelBase<NAV.NavServices.SilverlightWeb_Port>, NAV.NavServices.SilverlightWeb_Port {
            
            public SilverlightWeb_PortClientChannel(System.ServiceModel.ClientBase<NAV.NavServices.SilverlightWeb_Port> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetConfiguration(NAV.NavServices.GetConfiguration request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetConfiguration", _args, callback, asyncState);
                return _result;
            }
            
            public NAV.NavServices.GetConfiguration_Result EndGetConfiguration(System.IAsyncResult result) {
                object[] _args = new object[0];
                NAV.NavServices.GetConfiguration_Result _result = ((NAV.NavServices.GetConfiguration_Result)(base.EndInvoke("GetConfiguration", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateLoginCredentials(NAV.NavServices.ValidateLoginCredentials request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ValidateLoginCredentials", _args, callback, asyncState);
                return _result;
            }
            
            public NAV.NavServices.ValidateLoginCredentials_Result EndValidateLoginCredentials(System.IAsyncResult result) {
                object[] _args = new object[0];
                NAV.NavServices.ValidateLoginCredentials_Result _result = ((NAV.NavServices.ValidateLoginCredentials_Result)(base.EndInvoke("ValidateLoginCredentials", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerList(NAV.NavServices.GetCustomerList request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerList", _args, callback, asyncState);
                return _result;
            }
            
            public NAV.NavServices.GetCustomerList_Result EndGetCustomerList(System.IAsyncResult result) {
                object[] _args = new object[0];
                NAV.NavServices.GetCustomerList_Result _result = ((NAV.NavServices.GetCustomerList_Result)(base.EndInvoke("GetCustomerList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveCustomer(NAV.NavServices.SaveCustomer request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SaveCustomer", _args, callback, asyncState);
                return _result;
            }
            
            public NAV.NavServices.SaveCustomer_Result EndSaveCustomer(System.IAsyncResult result) {
                object[] _args = new object[0];
                NAV.NavServices.SaveCustomer_Result _result = ((NAV.NavServices.SaveCustomer_Result)(base.EndInvoke("SaveCustomer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReport(NAV.NavServices.GetReport request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetReport", _args, callback, asyncState);
                return _result;
            }
            
            public NAV.NavServices.GetReport_Result EndGetReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                NAV.NavServices.GetReport_Result _result = ((NAV.NavServices.GetReport_Result)(base.EndInvoke("GetReport", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:microsoft-dynamics-schemas/nav/system/", ConfigurationName="NavServices.SystemService_Port")]
    public interface SystemService_Port {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:microsoft-dynamics-schemas/nav/system/:Companies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCompanies(NAV.NavServices.Companies request, System.AsyncCallback callback, object asyncState);
        
        NAV.NavServices.Companies_Result EndCompanies(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Companies", WrapperNamespace="urn:microsoft-dynamics-schemas/nav/system/", IsWrapped=true)]
    public partial class Companies {
        
        public Companies() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Companies_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/nav/system/", IsWrapped=true)]
    public partial class Companies_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/nav/system/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string[] return_value;
        
        public Companies_Result() {
        }
        
        public Companies_Result(string[] return_value) {
            this.return_value = return_value;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SystemService_PortChannel : NAV.NavServices.SystemService_Port, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompaniesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CompaniesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SystemService_PortClient : System.ServiceModel.ClientBase<NAV.NavServices.SystemService_Port>, NAV.NavServices.SystemService_Port {
        
        private BeginOperationDelegate onBeginCompaniesDelegate;
        
        private EndOperationDelegate onEndCompaniesDelegate;
        
        private System.Threading.SendOrPostCallback onCompaniesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SystemService_PortClient() {
        }
        
        public SystemService_PortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SystemService_PortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemService_PortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemService_PortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<CompaniesCompletedEventArgs> CompaniesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NAV.NavServices.SystemService_Port.BeginCompanies(NAV.NavServices.Companies request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCompanies(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCompanies(System.AsyncCallback callback, object asyncState) {
            NAV.NavServices.Companies inValue = new NAV.NavServices.Companies();
            return ((NAV.NavServices.SystemService_Port)(this)).BeginCompanies(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NAV.NavServices.Companies_Result NAV.NavServices.SystemService_Port.EndCompanies(System.IAsyncResult result) {
            return base.Channel.EndCompanies(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string[] EndCompanies(System.IAsyncResult result) {
            NAV.NavServices.Companies_Result retVal = ((NAV.NavServices.SystemService_Port)(this)).EndCompanies(result);
            return retVal.return_value;
        }
        
        private System.IAsyncResult OnBeginCompanies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginCompanies(callback, asyncState);
        }
        
        private object[] OnEndCompanies(System.IAsyncResult result) {
            string[] retVal = this.EndCompanies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCompaniesCompleted(object state) {
            if ((this.CompaniesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CompaniesCompleted(this, new CompaniesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CompaniesAsync() {
            this.CompaniesAsync(null);
        }
        
        public void CompaniesAsync(object userState) {
            if ((this.onBeginCompaniesDelegate == null)) {
                this.onBeginCompaniesDelegate = new BeginOperationDelegate(this.OnBeginCompanies);
            }
            if ((this.onEndCompaniesDelegate == null)) {
                this.onEndCompaniesDelegate = new EndOperationDelegate(this.OnEndCompanies);
            }
            if ((this.onCompaniesCompletedDelegate == null)) {
                this.onCompaniesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCompaniesCompleted);
            }
            base.InvokeAsync(this.onBeginCompaniesDelegate, null, this.onEndCompaniesDelegate, this.onCompaniesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override NAV.NavServices.SystemService_Port CreateChannel() {
            return new SystemService_PortClientChannel(this);
        }
        
        private class SystemService_PortClientChannel : ChannelBase<NAV.NavServices.SystemService_Port>, NAV.NavServices.SystemService_Port {
            
            public SystemService_PortClientChannel(System.ServiceModel.ClientBase<NAV.NavServices.SystemService_Port> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCompanies(NAV.NavServices.Companies request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Companies", _args, callback, asyncState);
                return _result;
            }
            
            public NAV.NavServices.Companies_Result EndCompanies(System.IAsyncResult result) {
                object[] _args = new object[0];
                NAV.NavServices.Companies_Result _result = ((NAV.NavServices.Companies_Result)(base.EndInvoke("Companies", _args, result)));
                return _result;
            }
        }
    }
}
